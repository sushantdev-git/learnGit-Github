you can use "code ." to open vs code in current directory from command prompt
Git commands

    //these two commands to set global user name and email
    git config --global user.name "FIRST_NAME LAST_NAME"
    git config --global user.email "MY_NAME@example.com"

    //to initialize a new git repository in a folder
    git init

    //to stage a file in git repository
    //this will make git to track changes in file.
    git add FILE_NAME.extension

    //to commit file in git repository
    git commit  //this command will open directory to commit file
    git commit -m "description" 
    //always provide userful description in commit message

    //to review commit history in our porject
    git log

    //to look at configuration 
    git config -l

    //to check status of our project
    git status

    //to see difference between current file and it's previous commit
    git diff fileName.extension

    //when you want to commit small changes directly without staging the file
    git commit -a -m "description"

    //to see all the patches that have made to repository
    git log -p

    //to see a specific patche
    git show ad27e6c71afdbaa133258adb82cd6c33fe7485f4 (this is patch id)

    //to see how many lines have been added to in each patch
    git log --stat

    //to see difference between current files and commited files
    git diff

    //to add changes to staging area by reviewing them
    git add -p
    //in this command git will ask you for each changes do you want to add it staged or not

    //to see difference between current files and staged files
    git diff --staged

    * you should always use extension with a file name

    //when you want to delete a file you can use
    git rm filename //after that you have to commit the changes

    //when you want to rename a file you can use
    git mv oldfilename newfilename
    //this command can also be used to move file in directory

    //if you want to ignore some file then you can use
    echo filename > gitignore
    git rm --cached filename
    git commit -m "description"
    //git will ignore any changes in this file.

    //if you have done some commit and want to change/update that commit then
     git commit --amend will help

    //if you want to revert the last commit because if cause some issue to the project then
    git revert HEAD  //because head is pointing to the current snapshot of repository
    //this command do not delete the last commit but add the new commit inverting the last commit
    //so all the changes in last commit will cancel but history remain there.

    git log -p -2 //will show us the last two patches


    //to see the current branch
    git branch

    //to create new branch
    git branch new-branch-name

    //to switch to new branch
    git checkout new-branch-name

    //to create new branch and switch to it
    git checkout -b new-branch-name
    

